SELECT
    UC.USER_ID,
    UC.CONSENT_STATUS,
    STRING_AGG(DISTINCT A.ACCOUNT_TYPE, ', ') AS ACCOUNT_TYPES,
    STRING_AGG(DISTINCT A.BANK_NAME, ', ') AS BANKS,
    COUNT(DISTINCT A.ACCOUNT_ID) AS TOTAL_ACCOUNTS,
    SUM(CASE WHEN UPPER(A.ACCOUNT_STATUS) = 'OPEN' THEN 1 END) AS ACTIVE_ACCOUNTS,
    SUM(CASE WHEN UPPER(A.ACCOUNT_STATUS) = 'CLOSED' THEN 1 END) AS CLOSED_ACCOUNTS,
    AVG(A.ACCOUNT_BALANCE) AS AVERAGE_ACCOUNT_BALANCE,
    MIN(A.ACCOUNT_BALANCE) AS MIN_ACCOUNT_BALANCE,
    MAX(A.ACCOUNT_BALANCE) AS MAX_ACCOUNT_BALANCE,
    COUNT(T.ACCOUNT_ID) AS TOTAL_TRANSACTIONS,
    SUM(T.TOTAL_TRANSACTION_AMOUNT) AS TOTAL_TRANSACTION_AMOUNT,
    MAX(T.LAST_TRANSACTION_DATE) AS LAST_TRANSACTION_DATE,
    SUM(CASE WHEN T.RECENT_ACTIVITY = 1 THEN 1 ELSE 0 END) AS RECENT_ACTIVITY,
    SUM(CASE WHEN T.INCOME_TRANSACTION = 1 THEN 1 ELSE 0 END) AS INCOME_TRANSACTION_COUNT,
    SUM(CASE WHEN T.INCOME_TRANSACTION = 1 THEN T.INCOME_AVG_AMOUNT ELSE 0 END) AS INCOME_AVG_AMOUNT,
    SUM(T.DEBIT_TRANSACTION_COUNT) AS DEBIT_TRANSACTION_COUNT,
    SUM(T.TOTAL_DEBIT_AMOUNT) AS TOTAL_DEBIT_AMOUNT,
    SUM(T.CREDIT_TRANSACTION_COUNT) AS CREDIT_TRANSACTION_COUNT,
    SUM(T.TOTAL_CREDIT_AMOUNT) AS TOTAL_CREDIT_AMOUNT
FROM
    USER_CONSENTS UC
        LEFT JOIN
    ACCOUNTS A ON UC.USER_ID = A.USER_ID
        LEFT JOIN (
            SELECT
                ACCOUNT_ID,
                COUNT(TRANSACTION_ID) AS TOTAL_TRANSACTIONS,
                SUM(TRANSACTION_AMOUNT) AS TOTAL_TRANSACTION_AMOUNT,
                MAX(TRANSACTION_DATE) AS LAST_TRANSACTION_DATE,
                MAX(CASE WHEN TRANSACTION_DATE >= '2023-10-01' THEN 1 END) AS RECENT_ACTIVITY,
                MAX(CASE WHEN UPPER(TRANSACTION_TYPE) = 'INCOME' THEN 1 END) AS INCOME_TRANSACTION,
                AVG(CASE WHEN UPPER(TRANSACTION_TYPE) = 'INCOME' THEN TRANSACTION_AMOUNT END) AS INCOME_AVG_AMOUNT,
                COUNT(CASE WHEN TRANSACTION_AMOUNT < 0 THEN 1 END) AS DEBIT_TRANSACTION_COUNT,
                SUM(CASE WHEN TRANSACTION_AMOUNT < 0 THEN TRANSACTION_AMOUNT END) AS TOTAL_DEBIT_AMOUNT,
                COUNT(CASE WHEN TRANSACTION_AMOUNT > 0 THEN 1 END) AS CREDIT_TRANSACTION_COUNT,
                SUM(CASE WHEN TRANSACTION_AMOUNT > 0 THEN TRANSACTION_AMOUNT END) AS TOTAL_CREDIT_AMOUNT,
                STRING_AGG(DISTINCT TRANSACTION_TYPE, ', ') AS TRANSACTION_TYPES
            FROM TRANSACTIONS
            GROUP BY ACCOUNT_ID
            ORDER BY ACCOUNT_ID
    ) T ON A.ACCOUNT_ID = T.ACCOUNT_ID
GROUP BY
    UC.USER_ID, UC.CONSENT_STATUS
ORDER BY
    UC.USER_ID, UC.CONSENT_STATUS
