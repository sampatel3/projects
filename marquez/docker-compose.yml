services:
  postgres_db:
    image: postgres:14
    container_name: postgres_database
    environment:
      POSTGRES_USER: sampatel3
      POSTGRES_PASSWORD: pw
      POSTGRES_DB: marquezdb
    ports:
      - "9876:5432"
    volumes:
      # - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql  # Optional, if you need to initialize the database
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sampatel3 -d marquezdb"]
      interval: 5s
      retries: 5
      start_period: 5s
      timeout: 5s

  dbt:
    build: .
    container_name: dbt_container
    working_dir: /app/dbt
    command: ["bash", "-c", "dbt run"]
    volumes:
      - ./dbt:/app/dbt
      - ./dbt/.dbt/profiles.yml:/app/dbt/.dbt/profiles.yml  
      # - ./marquez:/app/marquez 
    depends_on:
      - postgres_db
    networks:
      - app-network

  postgrest:
    image: postgrest/postgrest
    container_name: postgrest_api
    restart: always
    depends_on:
      - postgres_db
      - dbt
    environment:
      PGRST_DB_URI: "postgres://sampatel3:pw@postgres_db:5432/marquezdb"
      PGRST_DB_SCHEMAS: "openfinance_api"
      PGRST_DB_ANON_ROLE: "web_anon"
    ports:
      - "3000:3000"
    networks:
      - app-network

  swagger_ui:
    image: nginx
    container_name: swagger_ui
    restart: always
    depends_on:
      - postgrest
    ports:
      - "8080:8080"
    environment:
      SWAGGER_JSON: /api/openapi.json
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro  # Use custom Nginx config
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
